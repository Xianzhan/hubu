<?xml version="1.0" encoding="utf-8"?>
<!-- scan: 是否扫描配置文件，若改变重新加载 -->
<!-- scanPeriod: 扫描时间间隔 -->
<!-- debug: 是否打印 logback 内部日志信息 -->
<configuration scan="false" scanPeriod="60 seconds" debug="false">

    <!-- property: 定义变量后，可以使 `${}` 来使用变量, 使用 resource=file 加载文件, 或者使用 name=k value=v -->
    <property resource="logback.properties"/>
    <!-- 使用 spring 里的变量 -->
    <springProperty scope="context" name="hubu_log_project" source="spring.application.name"/>

    <!-- contextName: 用于区分不同应用程序的记录 -->
    <contextName>${hubu_context_name}</contextName>

    <appender name="CONSOLE-LOG" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>[%d{yyyy-MM-dd' 'HH:mm:ss.sss}] [%X{hubu-request-ip}] [%X{hubu-request-id}] [%t] [%logger{16}] [%L] [%-5p] %m%n</pattern>
        </layout>
    </appender>
    <appender name="INFO-LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <encoder>
            <pattern>[%d{yyyy-MM-dd' 'HH:mm:ss.sss}] [%X{hubu-request-ip}] [%X{hubu-request-id}] [%t] [%logger{16}] [%L] [%-5p] %m%n</pattern>
        </encoder>

        <!-- 滚动策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 路径，可用变量，如 ${LOG_INFO_HOME}//%d.log -->
            <fileNamePattern>${hubu_file_path}/info/${hubu_log_project}_%d.log</fileNamePattern>
            <maxHistory>30</maxHistory>
            <!-- <maxFileSize>100MB</maxFileSize> -->
        </rollingPolicy>
    </appender>
    <appender name="ERROR-LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <encoder>
            <pattern>[%d{yyyy-MM-dd' 'HH:mm:ss.sss}] [%X{hubu-request-ip}] [%X{hubu-request-id}] [%t] [%logger{16}] [%L] [%-5p] %m%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${hubu_file_path}/error/${hubu_log_project}_%d.log</fileNamePattern>
            <maxHistory>30</maxHistory>
            <!-- <maxFileSize>100MB</maxFileSize> -->
        </rollingPolicy>
    </appender>

    <!-- <logger name="java.package.name"/> -->

    <root level="info">
        <appender-ref ref="CONSOLE-LOG"/>
        <appender-ref ref="INFO-LOG"/>
        <appender-ref ref="ERROR-LOG"/>
    </root>
</configuration>

<!--
 为什么叫 logback-spring.xml 而不叫 logback.xml?
     在 Spring Cloud 项目启动时，第一个创建的上下文是 bootstrap，若用 logback.xml 将无法获取相关变量，所以改名 logback-spring.xml。
 -->
